{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./index.js","webpack:///./src/chord.js","webpack:///./src/legend.js","webpack:///./src/main.js","webpack:///./src/rect.js","webpack:///./src/stats.js","webpack:///./src/text.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","self","global","undefined","h5cv","_src_main__WEBPACK_IMPORTED_MODULE_0__","Chord","arg","options","container","data","vmap","width","height","radius","Math","min","colorDomain","padding","colors","hover","size","colorScale","svg","matrix","map","rows","row","chord","d3","layout","sortSubgroups","descending","colorValues","forEach","concat","color","apply","max","scale","linear","domain","range","append","offset","select","attr","selectAll","chords","enter","style","send","source","index","target","recv","updateColor","__webpack_exports__","colorLegend","gradID","option","pos","left","right","top","bottom","noLabel","nolabel","format","gradientID","legend","Svg","appendChild","document","getElementById","step","res","push","linearDomain","length","gradient","linearGradient","text","title","hc5v","spec","layers","rings","Array","config","outerRadius","innerRadius","chartTitle","colorDomains","cirRange","cirOffset","cirSize","layer","reduce","a","b","li","sectionRadiusRange","cirPadding","sectionRadius","type","_chord__WEBPACK_IMPORTED_MODULE_0__","_rect__WEBPACK_IMPORTED_MODULE_2__","encoding","_text__WEBPACK_IMPORTED_MODULE_1__","_legend__WEBPACK_IMPORTED_MODULE_3__","layerlayer","project","si","ring","ri","bars","stats","dataItems","groups","ci","delta","endAngle","startAngle","di","start","getSize","getColor","_stats__WEBPACK_IMPORTED_MODULE_0__","keys","k","pow","exponent","arc","fields","isArray","Error","result","f","array","avg","std","Text","prefix","groupLabel","PI"],"mappings":"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","file":"hc5v.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import h5cv from './src/main';\n\nvar root = typeof self == 'object' && self.self === self && self ||\n           typeof global == 'object' && global.global === global && global ||\n           this;\n\nroot.h5cv = h5cv;","export default function Chord(arg) {\n    var options = arg || {},\n        container = options.container || \"body\",\n        data = options.data,\n        vmap = options.vmap,\n        width = options.width || 800,\n        height = options.height || width,\n        radius = options.radius || Math.min(width/2, height/2),\n        padding = options.padding || 0.1,\n        colorDomain = options.colorDomain || null,\n        colors = options.colors || ['steelblue', 'red'],\n        hover = options.hover || function(d) {};\n\n    if(!vmap.hasOwnProperty(\"size\"))\n        vmap.size = 'count';\n\n    var matrix = data.map(function(rows){\n        return rows.map(function(row){\n            return row[vmap.size];\n        });\n    });\n\n    var chord = d3.layout.chord()\n        .padding( 0.1)\n        .sortSubgroups(d3.descending)\n        .matrix(matrix);\n\n    var colorValues = [];\n\n    data.forEach(function(rows){\n        rows.forEach(function(row){\n            colorValues = colorValues.concat(row[vmap.color]);\n        });\n    });\n\n    if(colorDomain === null) {\n        colorDomain = [Math.min.apply(null, colorValues), Math.max.apply(null, colorValues)];\n    }\n\n    var colorScale;\n\n    if(typeof colors == 'function') {\n        colorScale = colors;\n    } else {\n        colorScale = d3.scale.linear()\n            .domain([colorDomain[0], colorDomain[1]])\n            .range(colors);\n    }\n\n    var svg;\n    if(typeof container.append === 'function') {\n        svg = container;\n    } else {\n        var offset = Math.min((width / 2), (height / 2))\n        svg = d3.select(container).append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n                .attr(\"transform\", \"translate(\" + offset + \",\" + offset + \")\");\n    }\n\n    var core = svg.append(\"g\")\n        .attr(\"class\", \"chord\")\n        .selectAll(\"path\")\n        .data(chord.chords)\n        .enter();\n\n    var ribbons = core.append(\"path\").attr(\"class\", \"ribbons\")\n        .attr(\"d\", d3.svg.chord().radius(radius))\n        .style(\"fill\", function(d){\n            var send = data[d.source.index][d.target.index][vmap.color];\n            var recv =  data[d.target.index][d.source.index][vmap.color];\n            return colorScale(Math.max(send, recv));\n        })\n        .style(\"stroke\", \"#FFF\")\n        .style(\"opacity\", 1);\n\n    chord.svg = svg;\n    chord.colorDomain = colorDomain;\n    chord.updateColor = function(colorDomain) {\n        chord.colorDomain = colorDomain;\n        colorScale.domain(colorDomain);\n        d3.selectAll('.ribbons').style(\"fill\", function(d){\n            var send = data[d.source.index][d.target.index][vmap.color];\n            var recv =  data[d.target.index][d.source.index][vmap.color];\n            return colorScale(Math.max(send, recv));\n        })\n    }\n    return chord;\n}\n\n","var gradID = 0;\nexport default function colorLegend(arg){\n    var option = arg || {},\n        container = option.container || null,\n        width = option.width || 200,\n        height = option.height || 20,\n        pos = option.pos ||[0, 0],\n        padding = option.padding || {left: 15, right: 15, top: 20, bottom: 0},\n        vmap = option.vmap || {},\n        noLabel = option.nolabel || false,\n        colors = option.colors || ['#eee', 'steelblue'],\n        domain = option.domain || ['min', 'max'],\n        format = option.format || d3.format(\".2s\");\n\n    var gradientID = gradID++;\n\n    width -= padding.left + padding.right;\n    height -= padding.top + padding.bottom;\n\n    var legend = (container === null) ? new Svg({width: width, height: height, padding: padding}) : container.svg,\n        rect = legend.append(\"g\");\n\n    if(container !== null){\n        if(typeof container.append === 'function')\n            container.append(legend);\n        else if(typeof container.appendChild === 'function')\n            container.appendChild(legend);\n        else if(typeof container === 'string')\n            document.getElementById(container).appendChild(legend);\n    }\n\n    function linearDomain(domain, n){\n        var step = (domain[1] - domain[0])/(n),\n            res = [];\n        for(var i = domain[0]; i<=domain[1]; i+=step) {\n            res.push(i);\n        }\n\n        res.push(domain[1]);\n        return res;\n    }\n\n    var colorScale = d3.scale.linear().domain(linearDomain([0, colors.length], colors.length)).range(colors);\n\n    function linearGradient(colors) {\n        var gradient = legend.append(\"defs\")\n            .append(\"linearGradient\")\n                .attr(\"id\", \"gradlegend\"+gradientID)\n                .attr(\"x1\", \"0%\")\n                .attr(\"x2\", \"100%\")\n                .attr(\"y1\", \"0%\")\n                .attr(\"y2\", \"0%\");\n\n        colors.forEach(function(c, i){\n            gradient.append(\"stop\")\n                .attr(\"offset\", i / colors.length )\n                .attr(\"stop-color\", c);\n        });\n        return gradient;\n    }\n\n    var grad = linearGradient(colors);\n\n    var rect = legend.append(\"g\");\n\n    var colorScale = rect.append(\"rect\")\n        .attr(\"x\", pos[0])\n        .attr(\"y\", pos[1])\n        .attr(\"width\", width-padding.left)\n        .attr(\"height\", height)\n        .style(\"fill\",\"url(#gradlegend\" + gradientID + \")\");\n\n    if(!noLabel) {\n        legend.append(\"text\")\n            .attr(\"x\", pos[0] - 5)\n            .attr(\"y\", pos[1] + height/2 + 5)\n            .style(\"fill\", \"#222\")\n            .style(\"text-anchor\", 'end')\n            // .style(\"font-size\", \".9em\")\n            .text(format(domain[0]));\n\n        legend.append(\"text\")\n            .attr(\"x\", pos[0] + width - padding.left + 5)\n            .attr(\"y\", pos[1] + height/2 + 5)\n            .style(\"fill\", \"#222\")\n            .style(\"text-anchor\", 'begin')\n            // .style(\"font-size\", \".9em\")\n            .text(format(domain[1]));\n    }\n\n\n    if(option.title) {\n        legend.append(\"g\")\n            .append(\"text\")\n            .attr(\"y\", pos[1] - padding.top)\n            .attr(\"x\", pos[0] + width/2)\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(option.title);\n    }\n\n    return legend;\n}\n\n","import chord  from './chord';\nimport textLabel  from './text';\nimport rect   from './rect';\nimport legend from './legend';\n\nexport default function hc5v(spec) {\n    let layers = spec.layers;\n    let rings = new Array(layers.length);\n\n    var config = spec.config,\n        width = config.width || 800,\n        height = config.height || width,\n        padding = config.padding || 10,\n        outerRadius = config.outerRadius || Math.min(width/2, height/2),\n        innerRadius = config.innerRadius || Math.min(width/4, height/4),\n        container = config.container || \"body\",\n        parentRing = container,\n        chartTitle = config.chartTitle || false,\n        colorDomains = config.colorDomains || [];\n\n    outerRadius -= padding;\n\n    var cirRange = outerRadius - innerRadius - padding,\n        cirOffset = innerRadius,\n        sectionRadius = cirOffset,\n        cirSize = layers\n            .map(function(layer){ return layer.size; })\n            .reduce(function(a,b){return a+b;});\n\n    layers.forEach(function(layer, li){\n        var sectionRadiusRange =  cirOffset + layer.size / cirSize * cirRange,\n            cirPadding = 0.05 * sectionRadiusRange,\n            sectionRadius = sectionRadiusRange,\n            colorDomain = ['min', 'max'];\n\n        if(layer.type == 'link') {\n            rings[li] = chord({\n                container: container,\n                data: layer.data,\n                width: width,\n                height: height,\n                colors: layer.colors,\n                radius: cirOffset,\n                colorDomain: colorDomains[li],\n                vmap: layer.vmap,\n            });\n            parentRing = rings[li];\n            container = rings[li];\n        }\n        else if(layer.type == 'bar') {\n            rings[li] = rect({\n                container: container,\n                data: layer.data,\n                innerRadius: cirOffset,\n                outerRadius: sectionRadius,\n                colors: layer.colors,\n                colorDomain: colorDomains[li],\n                vmap: layer.vmap || layer.encoding,\n            });\n            cirOffset = sectionRadius + cirPadding;\n        } else if(layer.type == 'text') {\n            layer.container = container;\n            layer.radius = cirOffset;\n            rings[li] = textLabel(s);\n            cirOffset = sectionRadius + cirPadding ;\n        }\n\n        if(layer.type !== 'text' && layer.vmap) {\n            if(layer.legend) {\n                if(rings[li].colorDomain) colorDomain = rings[li].colorDomain;\n                legend({\n                    container: container,\n                    colors: layer.colors,\n                    height: Math.min(50, outerRadius/2 / layerlayer.length) ,\n                    width: width/2 - outerRadius / 2 - padding * 4,\n                    title: layer.project + ' (' + ((layer.vmap) ? layer.vmap.color : null) + ')',\n                    domain: colorDomain,\n                    pos: [outerRadius/2 + padding*4, padding*2 + outerRadius/2 + outerRadius/2 / (layerlayer.length-1) * si]\n                })\n            }\n        }\n\n        if(typeof container.svg.append == 'function' && chartTitle) {\n            container.svg.append(\"text\")\n                .style(\"font-size\", \"1.1em\")\n                .style(\"text-anchor\", \"middle\")\n                .attr(\"x\", 0)\n                .attr(\"y\", height/2 - 15)\n                .text(function(d, i) { return  chartTitle });\n        }\n    })\n\n    rings.updateColor = function(colorDomains) {\n        rings.forEach(function(ring, ri){\n\n            if(layers[ri].type !== 'text') {\n\n                ring.updateColor(colorDomains[ri]);\n            }\n        })\n    }\n    return rings;\n}\n\n","import getStats from './stats';\n\nexport default function bars(arg) {\n    var options = arg || {},\n        container = options.container || \"body\",\n        data = options.data,\n        vmap = options.vmap,\n        width = options.width || 800,\n        height = options.height || width,\n        outerRadius = options.outerRadius || Math.min(width/2, height/2),\n        innerRadius = options.innerRadius || outerRadius / 4,\n        padding = options.padding || 0.05,\n        domain = options.domain || null,\n        colorDomain = options.colorDomain || null,\n        stats = options.stats || null,\n        colors = options.colors || ['white', 'steelblue'],\n        hover = options.hover || function(d) {};\n\n    var chords = container.groups();\n    var dataItems = [];\n    chords.forEach(function(chord, ci){\n        var delta = (chord.endAngle - chord.startAngle ) / data[ci].length;\n        data[ci].forEach(function(d, di){\n            var start =  chord.startAngle + di*delta;\n            d.startAngle = start;\n            d.endAngle = start + delta;\n            d.index = chord.index;\n        })\n        dataItems = dataItems.concat(data[ci]);\n    })\n\n    var svg = container.svg;\n\n    var bars = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + (width / 2) + \",\" + (height / 2) + \")\");\n\n    var getSize = function() { return outerRadius; },\n        getColor = (typeof colors === 'function') ? colors : function() { return colors[0]};\n\n    if(stats === null) {\n        stats = getStats(dataItems, Object.keys(vmap).map(function(k){ return vmap[k]; }));\n    }\n\n    if(vmap.color && typeof(colors) != 'function') {\n\n        if(colorDomain === null) {\n            if(stats[vmap.color].max == stats[vmap.color].min) stats[vmap.color].max+=0.000001;\n            colorDomain = [stats[vmap.color].min, stats[vmap.color].max];\n        }\n\n        if(typeof colors == 'function') {\n            getColor = colors;\n        } else {\n            getColor =  d3.scale.linear()\n                .domain(colorDomain)\n                .range(colors);\n        }\n    }\n\n    if(vmap.size) {\n        getSize =  d3.scale.pow().exponent(0.9)\n            .domain([stats[vmap.size].min, stats[vmap.size].max])\n            .range([innerRadius, outerRadius]);\n    }\n\n    function createArc(d) {\n        return d3.svg.arc()\n            .innerRadius(innerRadius)\n            .outerRadius(getSize(d[vmap.size]))\n            (d);\n    }\n\n    var ring = svg.append(\"g\").selectAll(\".bar\")\n\n        .data(dataItems)\n        .enter()\n\n    var marks = ring.append(\"path\").attr(\"class\", \"bars\")\n        .attr('class', 'bars')\n        .style(\"fill\", function(d) { return getColor(d[vmap.color]); })\n        // .style(\"stroke\", function(d) { return getColor(d[vmap.color]); })\n        .style(\"stroke\", '#fff')\n        .style(\"stroke-width\", 0.5)\n        // .style(\"fill-opacity\", function(d){return getOpacity(d[opacityAttr])})\n        .attr(\"d\", createArc)\n        // .on(\"mouseover\", highlight)\n        // .on(\"mouseout\", unhighlight);\n    // visualElement\n    //     .style(\"stroke\", '#fff')\n    //     .style(\"stroke-width\", 0.5);\n    bars.svg = svg;\n    bars.colorDomain = colorDomain;\n    bars.updateColor = function(colorDomain) {\n        bars.colorDomain = colorDomain;\n        getColor.domain(colorDomain);\n        d3.selectAll(\".bars\").style(\"fill\", function(d) { return getColor(d[vmap.color]); })\n    }\n\n    return bars;\n}","export default function stats(data, fields){\n\n    if(!Array.isArray(data))\n        throw new Error(\"Inproper input data format.\");\n\n    var result = {};\n\n    fields.forEach(function(f) {\n        var a = data.map(function(d){return d[f]; });\n        result[f] = {\n            min: array.min(a),\n            max: array.max(a),\n            avg: array.avg(a),\n            std: array.std(a)\n        };\n    });\n\n    return result;\n};","export default function Text(arg) {\n    var options = arg || {},\n        container = options.container || \"body\",\n        data = options.data,\n        prefix = options.prefix || '',\n        radius = options.radius || 200,\n        color = options.color || '#000000',\n        hover = options.hover || function(d) {};\n\n    var chords = container.groups();\n    // chords.forEach(function(chord, ci){\n    //\n    //     data[ci].startAngle = chord.startAngle\n    //     data[ci].endAngle = chord.endAngle;\n    //     data[ci].index = chord.index;\n    // })\n\n    function textTransofrm(d) {\n        var offset = (d.startAngle + (d.endAngle - d.startAngle)/2);\n        return (offset > Math.PI/2 && offset < 1.5*Math.PI) ? \"rotate(270)\" :\"rotate(90)\";\n    }\n\n    function textRotate(d) {\n        var offset = (d.startAngle + (d.endAngle - d.startAngle)/2);\n        return \"rotate(\" + ( offset * 180 / Math.PI - 90)\n            + \")translate(\" + (radius+5) + \",0)\";\n    }\n\n    var groupLabel = container.svg.append(\"g\").selectAll(\"groupLabel\")\n            .data(chords)\n            .enter().append(\"g\")\n            .attr(\"transform\", textRotate);\n\n    groupLabel.append(\"text\")\n        .style(\"font-size\", \"0.9em\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\",  textTransofrm)\n        .text(function(d, i) { return  prefix + data[i]; });\n\n    return groupLabel;\n}\n\n"],"sourceRoot":""}